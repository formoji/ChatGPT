name: Release CI


on:
  push:
    branches:
      - master
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  # create-release:
  #   permissions:
  #     contents: write
  #   runs-on: ubuntu-latest
  #   outputs:
  #     release_id: ${{ steps.create-release.outputs.result }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - name: get version
  #       run: echo "PACKAGE_VERSION=${{ github.ref }}" >> $GITHUB_ENV
  #     - name: create release
  #       id: create-release
  #       uses: actions/github-script@v6
  #       with:
  #         script: |
  #           const { data } = await github.rest.repos.createRelease({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             tag_name: `${process.env.PACKAGE_VERSION}`,
  #             name: `Desktop App ${{ github.ref }}`,
  #             body: 'Take a look at the assets to download and install this app.',
  #             draft: true,
  #             prerelease: false
  #           })
  #           return data.id

  build-tauri:
    # needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@v0.3
        env:
          GITHUB_TOKEN: ${{ secrets.MY_SECRET_TOKEN }}
          TAURI_PRIVATE_KEY: ${{secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    # needs: [create-release, build-tauri]
    needs: [build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
          TAURI_PRIVATE_KEY: ${{secrets.TAURI_PRIVATE_KEY }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
  
  updater:
    runs-on: ubuntu-latest
    needs: build-tauri

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
      - run: pnpm install --frozen-lockfile

      - name: Download x86_64 artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-x86_64
          path: artifacts/x86_64

      - name: Download aarch64 artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-aarch64
          path: artifacts/aarch64

      - name: test
        run: |
          ls ./artifacts/**/*


      - name: Updater JSON
        run: pnpm updater --token=${{ secrets.MY_GITHUB_TOKEN }}




      - name: Deploy install.json
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          publish_dir: ./updater
          # force_orphan: true

      - name: Query version number
        run: echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV