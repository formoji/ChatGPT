name: Release CI


on:
  push:
    tags:
      - 'v*'



jobs:
  release-chatgpt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install xattr
        run: |
          sudo apt-get update
          sudo apt-get install -y xattr

      - name: Query version number
        run: echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Download x86_64 artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-x86_64
          path: artifacts/x86_64

      - name: Download aarch64 artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-aarch64
          path: artifacts/aarch64

      - name: Rename artifacts
        run: |
          ls ./artifacts/**/*
          
    
      - name: Create Release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          name: ChatGPT v${{ env.version }}
          body: See the assets to download this version and install.
          prerelease: false
          generate_release_notes: false
          files: ./artifacts/**/*

  updater:
    runs-on: ubuntu-latest
    needs: release-chatgpt

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
      - run: pnpm install --frozen-lockfile

      - name: Updater JSON
        run: pnpm updater --token=${{ secrets.MY_GITHUB_TOKEN }}

      - name: Deploy install.json
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          publish_dir: ./updater
          # force_orphan: true

      - name: Query version number
        run: echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV

  # publish-winget:
  #   # Action can only be run on windows
  #   runs-on: windows-latest
  #   needs: [build-chatgpt, release-chatgpt]
  #   steps:
  #     - uses: vedantmgoyal2009/winget-releaser@v1
  #       with:
  #         identifier: lencx.ChatGPT
  #         token: ${{ secrets.WINGET_TOKEN }}
  #         version: ${{ github.event.release.tag_name }}
